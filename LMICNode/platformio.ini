;-------------------------------------------------------------------------------
;
;  File:         platformio.ini
; 
;  Function:     Project configuration file for LMIC-node.
;
;  Copyright:    Copyright (c) 2023  Hugo S. C. Bessa
;  License:      MIT License. See accompanying LICENSE file.
;
;  Author:       Hugo S. C. Bessa, Francisco Helder C. Santos
;
;  Description:  This is the main configuration file.
;
;-------------------------------------------------------------------------------


[platformio]
default_envs = 
    <platformio.ini board selector guard> Comment this line and uncomment one board-id below:
    ; LoRa development boards with integrated LoRa support: 
    ; Board-id                            Board name
    ;---------                            ----------
    ; ttgo_lora32_v1                    ; TTGO LoRa32 v1.3
    ; pico                              ; Raspberry Pi Pico


; ------------------------------------------------------------------------------
; |  Common Settings                                                           |
; ------------------------------------------------------------------------------

[common]

monitor_speed = 115200                 ; No need to change this.

build_flags =
    -D DO_WORK_INTERVAL_SECONDS=30

    -D ABP_ACTIVATION                ; Use ABP instead of OTAA activation.
    ;
    ; -D WAITFOR_SERIAL_SECONDS=10     ; Can be used to override the default value (10).
    ;                                    Is used only for boards with default set to != 0 in BSF.
    ;
    ; -D LMIC_CLOCK_ERROR_PPM=0        ; If not defined defines, otherwise overrides value defined in BSF.
    ;                                    Is for testing purposes only.
    ;                                    Do not enable this unless you explicitly know what you are doing.

lib_deps =
    olikraus/U8g2                      ; OLED display library
    lnlp/EasyLed                       ; LED library
    Wire
;   ███ Add additional libraries for User Code below this line ███
    

; -------------------------------
; |  Shortcuts and Workarounds  |
; -------------------------------

[esp32]
build_flags =
    -D hal_init=LMICHAL_init           ; Workaround for naming conflict of function hal_init
                                       ; introduced by newer versions (> 3.5.0) of 
                                       ; PlatformIO Espressif 32 platform (ESP32 Arduino core).
                                       ; See https://github.com/lnlp/LMIC-node/issues/41 for more information.

[pico]
upload_port = E:                       ; Shortcut for Raspberry Pi Pico. 
                                       ; Operating system and hardware dependent.
                                       ; Placed here so it can be easily changed.
                                       ; See section [env:pico] below for more information.


; --------------------------------------------------
; |  MCCI LoRaWAN LMIC library specific settings   |
; --------------------------------------------------

[mcci_lmic]
; LMIC-node was tested with MCCI LoRaWAN LMIC library v3.3.0 and v4.0.0.
; Some changes have been announced for future versions of the MCCI library
; which may be incompatible with LMIC-node. In case of problems just
; use mcci-catena/MCCI LoRaWAN LMIC library@4.0.0 below which will
; explicitly use v4.0.0 of the library.
; Perform 'PlatformIO: Clean' after changing library version and
; in case of issues remove the old version from .pio/libdeps/*.

; Note: LMIC_PRINTF_TO is defined for each board separately
;       in the board specific sections. Don't define it in this section.

lib_deps =
    ; Only ONE of below LMIC libraries should be enabled.
    ; mcci-catena/MCCI LoRaWAN LMIC library           ; MCCI LMIC library (latest release)
    https://github.com/mcci-catena/arduino-lmic.git   ; MCCI LMIC library (develop release)

build_flags =
    ; Use platformio.ini for settings instead lmic_project_config.h.
    -D ARDUINO_LMIC_PROJECT_CONFIG_H_SUPPRESS

    ; Ping and beacons not supported for class A, disable to save memory.
    -D DISABLE_PING
    -D DISABLE_BEACONS

    ; -D LMIC_DEBUG_LEVEL=1            ; 0, 1 or 2
    
    ; -D CFG_sx1272_radio=1            ; Use for SX1272 radio
    -D CFG_sx1276_radio=1              ; Use for SX1276 radio
    ; -D CFG_sx1262_radio=1              ; Use for SX1262 radio
    -D USE_ORIGINAL_AES                ; Faster but larger, see docs
    ; -D LMIC_USE_INTERRUPTS           ; Not tested or supported on many platforms
    ; -D LMIC_ENABLE_DeviceTimeReq=1   ; Network time support

    ; --- Regional settings -----
    ; Enable only one of the following regions:    
    ; -D CFG_as923=1
    ; -D CFG_as923jp=1   
    -D CFG_au915=1
    ; -D CFG_cn490=1                   ; Not yet supported
    ; -D CFG_cn783=1                   ; Not yet supported
    ; -D CFG_eu433=1                   ; Not yet supported
    ; -D CFG_eu868=1
    ; -D CFG_in866=1
    ; -D CFG_kr920=1
    ; -D CFG_us915=1

[env:ttgo_lora32_v1]
; TTGO LoRa32 v1.3 (ESP32)
; Onboard OLED display SSD1306 0.96" 128x64.
platform = espressif32
board = ttgo-lora32-v1
framework = arduino
upload_speed = 921600
monitor_speed = ${common.monitor_speed}
lib_deps =
    ${common.lib_deps}    
    ${mcci_lmic.lib_deps}
    adafruit/Adafruit BusIO @ ^1.14.5
    adafruit/Adafruit GFX Library@^1.11.3
    adafruit/Adafruit SSD1306@^2.5.7
build_flags =
    ${common.build_flags}
    ${esp32.build_flags}
    ${mcci_lmic.build_flags} 
    -D BSF_TTGO_LORA32_V1
    -D BSFILE=\"boards/bsf_ttgo_lora32_v1.h\"
    -D MONITOR_SPEED=${common.monitor_speed}
    -D LMIC_PRINTF_TO=Serial    
    -D USE_SERIAL
    -D USE_LED                 
    -D USE_DISPLAY



[env:pico]
; Raspberry Pi Pico (RP2040).
; No display.
;
; IMPORTANT information for firmware upload:
; ------------------------------------------
; Device must be in BOOTSEL mode to upload firmware.
; (To put in BOOTSEL mode: press BOOTSEL button, power on or reset board, release BOOTSEL button.)
; For Windows specify: upload_protocol = picotool (appears not needed for Mac and Linux).
; upload_port is operating system and hardware dependent. 
; For convenience, to set upload_port: set upload_port in [pico] section (on top).
; Examples:
;   Windows: upload_port = E:
;   Mac:     upload_port = /Volumes/RPI-RP2
;   Linux:   upload_port = /media/<user>/RSPI-RP2
; On Windows USB driver for Pico [RP2 Boot (interface 1)] needs be installed with Zadig,
; see: https://community.platformio.org/t/official-platformio-arduino-ide-support-for-the-raspberry-pi-pico-is-now-available/20792
;
platform = raspberrypi
framework = arduino
board = pico
upload_protocol = picotool
upload_port = ${pico.upload_port}      ; Operating system and hardware dependent
monitor_speed = ${common.monitor_speed}
lib_deps =
    ${common.lib_deps}    
    ${mcci_lmic.lib_deps}
build_flags =
    ${common.build_flags}
    ${mcci_lmic.build_flags} 
    -D BSF_PICO
    -D BSFILE=\"boards/bsf_pico.h\"
    -D MONITOR_SPEED=${common.monitor_speed}
    -D _GNU_SOURCE
    -D LMIC_PRINTF_TO=SerialUSB
    -D USE_SERIAL
    -D USE_LED
    ; -D USE_DISPLAY             ; Requires external I2C OLED display


; end of file   